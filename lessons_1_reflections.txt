
1) How did viewing a diff between two versions of a file  help you see the bug
that was introduced?

It was helpful because the diff command only displays lines of codes that  have
been changed. This is useful when finding changes between versions  of large
files having hundreds and thousands of lines of code. It can  drastically reduce
the amount of time to find certain changes and save me from a lot hassle.

2) How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It gives me the ability to roll-back to a previous version of the file. It also
allows me to compare different versions to see what changes  have occurred during
a timespan. Being assured of the possibility of being able to revert back to a
former state allows me to work on my project  without worrying about making
errors.

3)What do you think are the pros and cons of manually choosing when to  create a
commit, like you do in Git, vs having versions automatically  saved, like Google
Docs does?

Pros:  Programmer can ensure that each commit is made to reflect a logical, and
therefore, a meaningful change.

Cons: Makes the programmer/user responsible for choosing when to save changes.
Thus, a programmer might forget to save changes at times.

4)Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

Version control systems, like Git, are typically used by programmers who are
often working on projects involving multiple and often interrelated  files.
Thus, a single logical change might change more than one file at a time because
of which saving multiple files in one commit makes more sense.

Version control systems like Google Docs, on the other hand, treat each file in
an independent manner because its users generally work with a single file at a
time.

5)How can you use the commands git log and git diff to view the history of
files?

The git log command displays a log showing recent commits made to the files in
the repository. Earlier commits can be viewed by scrolling down.

The git diff command shows the changes that occurred between any two commits.

6)How might using version control make you more confident to make changes that
could break something?

By using version control, it's possible to "checkout" to a previous version at
any time.  This is reassuring since we can track down which commit and which
change within that  commit introduced the error.

7)Now that you have your workspace set up, what do you want to try using Git
for?

I want to try using Git to keep my projects under version control and upload
them onto GitHub.
